{"version":3,"sources":["components/ListItem.js","api.js","actions/todos.js","actions/index.js","containers/ListItemContainer.js","components/App.js","containers/AppContainer.js","reducers/index.js","reducers/todos.js","components/NewTodoRenderField.js","components/TodoDetail.js","containers/TodoDetailContainer.js","components/NewTodo.js","containers/NewTodoContainer.js","index.js"],"names":["ListItem","item","onDelete","onDone","style","backgroundColor","get","opacity","width","display","type","defaultChecked","onChange","e","to","onClick","apiCall","method","endpoint","params","cb","body","Object","keys","map","p","encodeURIComponent","join","ajax","url","code","tText","JSON","parse","console","log","changeTodoFlag","id","deleting","undefined","done","changeTodoFlagOnServer","dispatch","api","res","ListItemContainer","connect","state","props","todos","todoID","deleteTodo","App","className","this","sum","key","todosByName","Component","AppContainer","keySeq","toList","sortBy","parseInt","reduce","cur","store","createStore","combineReducers","form","formReducer","fromJS","action","newTodo","assign","set","todo","delete","newState","forEach","setIn","composeWithDevTools","applyMiddleware","thunkMiddleware","NewTodoRenderField","input","label","meta","touched","error","warning","placeholder","TodoDetailEditFormContainer","reduxForm","handleSubmit","onSubmit","name","component","TodoDetail","onUpdateTodo","enableReinitizalize","keepDirtyOnReinitizalize","initialValues","TodoDeailContaier","match","updatedTodo","toJS","colors","priority","_id","updateTodo","NewTodoFormContainer","NewTodo","onAddTodo","NewTodoContainer","color","newItem","addTodoOnServer","ReactDOM","render","exact","path","TodoDetailContainer","document","getElementById"],"mappings":"ySAiBeA,MAbf,YAA+C,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OAChC,OAAQ,yBAAKC,MAAO,CAAEC,gBAAiBJ,EAAKK,IAAI,UAAWC,QAASN,EAAKK,IAAI,YAAc,GAAM,IAC7F,yBAAKF,MAAO,CAAEI,MAAO,QAASC,QAAS,iBAAmBR,EAAKK,IAAI,UACnE,yBAAKF,MAAO,CAAEI,MAAO,OAAQC,QAAS,WAAaR,EAAKK,IAAI,aAC5D,2BAAOI,KAAK,WAAWC,gBAAqC,IAArBV,EAAKK,IAAI,QAAkBM,SAAU,SAAAC,GAAC,OAAIV,GAAQF,EAAKK,IAAI,aACxE,IAAzBL,EAAKK,IAAI,YACN,yBAAKF,MAAO,CAAEK,QAAS,WACnB,kBAAC,IAAD,CAAMK,GAAI,SAAWb,EAAKK,IAAI,OAA9B,QACA,4BAAQS,QAASb,GAAjB,WACM,O,SCVP,SAASc,EAAQC,EAAQC,EAAUC,EAAQC,GACtD,IAAIC,EACAF,IACAE,EAAOC,OAAOC,KAAKJ,GAAQK,KAAI,SAAAC,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmBP,EAAOM,OAAKE,KAAK,MAG1GC,eAAK,CAAEC,IARK,8BAQUX,EAAUD,OAAQA,EAAQI,KAAMA,IAAQ,SAACS,EAAMC,GACjE,IACI,GAAKD,GAAQ,KAASA,EAAO,KAASV,EAClC,OAAOA,EAAGY,KAAKC,MAAMF,IAE3B,MAAOlB,GACLqB,QAAQC,IAAItB,OCXxB,SAASuB,EAAeC,GAA6C,IAAzCC,EAAwC,4DAA7BC,EAAWC,EAAkB,4DAAXD,EACrD,MAAO,CACH7B,KCHmB,cDInB2B,KACAC,WACAE,QAID,SAASC,EAAuBJ,GAA6C,IAAzCC,EAAwC,4DAA7BC,EAAWC,EAAkB,4DAAXD,EACpE,OAAO,SAACG,QAESH,IAATC,GACAG,EAAI,QAAS,IAAMN,EAAI,CAAEG,KAAMA,IAAQ,SAACI,GACpCF,EAASN,EAAeC,OAAIE,EAAwB,SAAbK,EAAIJ,eAIlCD,IAAbD,GACAI,EAASN,EAAeC,EAAIC,OAAUC,KENlD,IAKeM,EALWC,mBAb1B,SAAyBC,EAAOC,GAC5B,MAAO,CACH/C,KAAM8C,EAAME,MAAM3C,IAAI,GAAK0C,EAAMX,QAIzC,SAA4BK,EAAUM,GAClC,MAAO,CACH9C,SAAU,kBAAMwC,GFiFWL,EEjFiBW,EAAMX,GFkF/C,SAACK,GACJA,EAASD,EAAuBJ,GAAI,OAAME,IAC1CI,EAAI,SAAU,IAAMN,EAAI,IAAI,SAACO,GACzBF,EAnBZ,SAAoBL,GAChB,MAAO,CACH3B,KC9EgB,WD+EhBwC,OAAQb,GAgBKc,CAAWd,UAJzB,IAA4BA,GEhF3BlC,OAAQ,SAACU,GAAD,OAAO6B,EAASD,EAAuBO,EAAMX,QAAIE,EAAW1B,QAIlDiC,CAGxB9C,G,kBCSaoD,E,iLArBX,OACE,yBAAMC,UAAU,OACd,qCAAWC,KAAKN,MAAMO,KADxB,UAES,6BACND,KAAKN,MAAMC,MAAMzB,KAAI,SAACX,GACrB,OAAQ,kBAAC,EAAD,CAAmB2C,IAAK3C,EAAGwB,GAAIxB,OAIzC,6BACA,6BACGyC,KAAKN,MAAMS,YAAYjC,KAAI,SAACX,GAC3B,OAAQ,kBAAC,EAAD,CAAmB2C,IAAK3C,EAAGwB,GAAIxB,QAG3C,kBAAC,OAAD,CAAMC,GAAI,YAAV,iB,GAlBU4C,aCgBlB,IAKeC,EALMb,mBAlBrB,SAAyBC,EAAOC,GAE5B,OADAd,QAAQC,IAAIY,EAAME,OACX,CACHA,MAAOF,EAAME,MAAMW,SACnBH,YAAaV,EAAME,MACdY,SACAC,QAAO,SAAAjD,GAAC,OAAIkD,SAASlD,EAAEP,IAAI,YAAa,OACxCkB,KAAI,SAAAX,GAAC,OAAIA,EAAEP,IAAI,SACpBiD,IAAKR,EAAME,MAAMY,SACZrC,KAAI,SAAAX,GAAC,OAAIA,EAAEP,IAAI,eACf0D,QAAO,SAACnD,EAAGoD,GAAJ,OAAYF,SAASE,EAAK,IAAMF,SAASlD,EAAG,WAIhE,SAA4B6B,EAAUM,GAClC,MAAO,KAGUF,CAGnBM,G,sDCjBWc,EAAQC,sBAAYC,0BAAgB,CAC7CC,KAAMC,UACNrB,MCNG,WAA8C,IAA7BF,EAA4B,uDAApBwB,iBAAO,IAAKC,EAAQ,uCAChD,GLJoB,aKIhBA,EAAO9D,KAAmB,CAC1B,IAAI+D,EAAUnD,OAAOoD,OAAO,GAAIF,EAAOC,QAAS,CAC5CnC,UAAU,IAGd,OAAOS,EAAM4B,IAAI,GAAKH,EAAOC,QAAQpC,GAAIkC,iBAAOE,IAGpD,GLRuB,gBKQnBD,EAAO9D,KACP,OAAOqC,EAAM4B,IAAI,GAAKH,EAAOI,KAAKvC,GAAIkC,iBAAOC,EAAOI,OAGxD,GLdoB,aKchBJ,EAAO9D,KACP,OAAOqC,EAAM8B,OAAOL,EAAOtB,QAG/B,GLnByB,kBKmBrBsB,EAAO9D,KAAwB,CAC/B,IAAIoE,EAAW/B,EAUf,OATAyB,EAAOvB,MAAM8B,SAAQ,SAAAH,GAEjB,IAAIH,EAAUnD,OAAOoD,OAAO,GAAIE,EAAM,CAClCtC,UAAU,IAGdwC,EAAWA,EAASH,IAAI,GAAKC,EAAKvC,GAAIkC,iBAAOE,OAG1CK,EAGX,GL/BuB,gBK+BnBN,EAAO9D,KAAsB,CAC7B,IAAIoE,EAAW/B,EAUf,MAR+B,qBAApByB,EAAOlC,WACdwC,EAAWA,EAASE,MAAM,CAAC,GAAKR,EAAOnC,GAAI,YAAamC,EAAOlC,WAGxC,qBAAhBkC,EAAOhC,OACdsC,EAAWA,EAASE,MAAM,CAAC,GAAKR,EAAOnC,GAAI,QAASmC,EAAOhC,OAGxDsC,EAKX,OAAO/B,KDvCPkC,8BACIC,0BAAgBC,O,QEVXC,EAAqB,SAAC,GAAD,IAC9BC,EAD8B,EAC9BA,MACAC,EAF8B,EAE9BA,MACA5E,EAH8B,EAG9BA,KAH8B,IAI9B6E,KAAQC,EAJsB,EAItBA,QAASC,EAJa,EAIbA,MAAOC,EAJM,EAINA,QAJM,OAM1B,6BACI,+BAAQJ,GACR,6BACI,2CAAWD,EAAX,CAAkB3E,KAAMA,EAAMiF,YAAaL,KAC1CE,IACKC,GAAS,8BAAOA,IACbC,GAAW,8BAAOA,OCCvCE,EAA8BC,oBAAU,CACxCxB,KAAM,eADwBwB,EATT,SAAC7C,GAAW,IACzB8C,EAAiB9C,EAAjB8C,aACR,OAAO,0BAAMC,SAAUD,GACnB,kBAAC,QAAD,CAAOpF,KAAK,OAAOsF,KAAK,QAAQL,YAAY,QAAQM,UAAWb,EAAoBE,MAAM,eACzF,kBAAC,QAAD,CAAO5E,KAAK,OAAOsF,KAAK,WAAWL,YAAY,WAAWM,UAAWb,EAAoBhF,MAAO,CAAEI,MAAO,IAAM8E,MAAM,aACrH,4BAAQ5E,KAAK,UAAb,oBAqBOwF,MAbf,YAA6C,IAAvBjG,EAAsB,EAAtBA,KAAMkG,EAAgB,EAAhBA,aACxB,OAAKlG,EAGG,6BACJ,4BAAKA,EAAKK,IAAI,UACd,oCAAUL,EAAKK,IAAI,QAAU,OAAS,SACtC,wCAAcL,EAAKK,IAAI,aACvB,kBAACsF,EAAD,CAA6BQ,qBAAqB,EAAMC,0BAA0B,EAAMC,cAAerG,EAAM8F,SAAUI,IACvH,kBAAC,IAAD,CAAMrF,GAAG,KAAT,SAPQ,kBAAC,WAAD,CAAUA,GAAG,OCL7B,IAKeyF,EALWzD,mBAZ1B,SAAyBC,EAAOC,GAC5B,MAAO,CACH/C,KAAM8C,EAAME,MAAM3C,IAAI,GAAK0C,EAAMwD,MAAMrF,OAAOkB,QAItD,SAA4BK,EAAUM,GAClC,MAAO,CACHmD,aAAc,SAAClG,GAAD,OAAUyC,GTwBGkC,ESxByB3E,ETyBjD,SAACyC,GACJ,IAAI+D,EAAc7B,EAAK8B,cAChBD,EAAYpE,UACZoE,EAAYnE,SAEnBmE,EAAYE,OAASF,EAAYG,UAAY,EAAI,MAAQ,QACzDjE,EAAI,QAAS,IAAMiC,EAAKtE,IAAI,MAAOmG,GAAa,SAAC7D,GAC7CA,EAAIP,GAAKO,EAAIiE,IACbjE,EAAIJ,KAAOoC,EAAKtE,IAAI,QACpBsC,EAAIN,SAAWsC,EAAKtE,IAAI,mBACjBsC,EAAIiE,IAEXnE,EApBL,SAAoBkC,GACvB,MAAO,CACHlE,KC3BmB,cD4BnBkE,QAiBakC,CAAWlE,UAbzB,IAA4BgC,MSpBT9B,CAGxBoD,GCLEa,EAAuBlB,oBAAU,CACjCxB,KAAM,eADiBwB,EATT,SAAC7C,GAAW,IAClB8C,EAAiB9C,EAAjB8C,aACR,OAAO,0BAAMC,SAAUD,GACnB,kBAAC,QAAD,CAAOpF,KAAK,OAAOsF,KAAK,QAAQL,YAAY,QAAQM,UAAWb,EAAoBE,MAAM,eACzF,kBAAC,QAAD,CAAO5E,KAAK,OAAOsF,KAAK,WAAWL,YAAY,WAAWM,UAAWb,EAAoBhF,MAAO,CAAEI,MAAO,IAAM8E,MAAM,aACrH,4BAAQ5E,KAAK,UAAb,WAiBOsG,MARf,YAAiC,IAAdC,EAAa,EAAbA,UACf,OAAQ,8BACJ,kBAACF,EAAD,CAAsBhB,SAAUkB,IAChC,kBAAC,IAAD,CAAMnG,GAAG,KAAT,UCRR,IAKeoG,EALUpE,mBAVzB,SAAyBC,EAAOC,GAC5B,MAAO,MAGX,SAA4BN,EAAUM,GAClC,MAAO,CACHiE,UAAW,SAAChH,GAAD,OAAUyC,EXmDtB,SAAyBzC,GAC5B,OAAO,SAACyC,GACJ,IAAIyE,EAAQlH,EAAKK,IAAI,aAAe,EAAI,MAAQ,QAC5C8G,EAAUnH,EAAK0E,IAAI,SAAUwC,GAEjCxE,EAAI,OAAQ,IADZyE,EAAUA,EAAQzC,IAAI,QAAQ,IACN+B,QAAQ,SAAC9D,GAC7BA,EAAIP,GAAKO,EAAIiE,WACNjE,EAAIiE,IAEXjE,EAAIJ,KAAoB,SAAbI,EAAIJ,KAEfE,EAjBD,CACHhC,KCxDgB,WDyDhB+D,QAeqB7B,QW9DSyE,CAAgBpH,QAI7B6C,CAGvBkE,GCHFM,IAASC,OAEL,kBAAC,WAAD,CAAUrD,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,QAAD,CAAOsD,OAAK,EAACC,KAAK,IAAIxB,UAAWtC,IACjC,kBAAC,QAAD,CAAO8D,KAAK,YAAYxB,UAAWyB,IACnC,kBAAC,QAAD,CAAOD,KAAK,WAAWxB,UAAWiB,MAG1CS,SAASC,eAAe,SAG5BjF,EAAI,MAAO,GAAI,IAAI,SAACC,GAChBsB,EAAMxB,SZ2DC,CACHhC,KCtFqB,gBDuFrBuC,MY7DuBL,EAAIpB,KAAI,SAAAX,GAI/B,OAHAA,EAAEwB,GAAKxB,EAAEgG,WACFhG,EAAEgG,IACThG,EAAE2B,KAAkB,SAAX3B,EAAE2B,KACJ3B,Y","file":"static/js/main.ffc10abe.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction ListItem({ item, onDelete, onDone }) {\n    return (<div style={{ backgroundColor: item.get('colors'), opacity: item.get('deleting') ? 0.3 : 1 }}>\n        <div style={{ width: '200px', display: 'inline-block' }}>{item.get('value')}</div>\n        <div style={{ width: '50px', display: 'inline' }}>{item.get('priority')}</div>\n        <input type=\"checkbox\" defaultChecked={item.get('done') === true} onChange={e => onDone(!item.get('done'))} />\n        {item.get('deleting') === false ? (\n            <div style={{ display: 'inline' }}>\n                <Link to={\"/todo/\" + item.get('id')}>Show</Link>\n                <button onClick={onDelete}>Delete</button>\n            </div>) : null}\n    </div>);\n}\n\nexport default ListItem;","import { ajax } from 'nanoajax';\nconst baseurl = 'http://localhost:3030/todos';\n\nexport default function apiCall(method, endpoint, params, cb) {\n    let body;\n    if (params) {\n        body = Object.keys(params).map(p => encodeURIComponent(p) + \"=\" + encodeURIComponent(params[p])).join(\"&\");\n\n    }\n    ajax({ url: baseurl + endpoint, method: method, body: body }, (code, tText) => {\n        try {\n            if ((code >= 200) && (code < 300) && (cb)) {\n                return cb(JSON.parse(tText));\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    });\n}","import { ADD_TODO, DEL_TODO, CHANGE_FLAG, UPDATE_TODO, MASS_ADD_TODO } from './index';\nimport api from '../api';\n\n\nfunction changeTodoFlag(id, deleting = undefined, done = undefined) {\n    return {\n        type: CHANGE_FLAG,\n        id,\n        deleting,\n        done\n    };\n}\n\nexport function changeTodoFlagOnServer(id, deleting = undefined, done = undefined) {\n    return (dispatch) => {\n\n        if (done !== undefined) {\n            api('PATCH', '/' + id, { done: done }, (res) => {\n                dispatch(changeTodoFlag(id, undefined, res.done === \"true\" ? true : false));\n            });\n        }\n\n        if (deleting !== undefined) {\n            dispatch(changeTodoFlag(id, deleting, undefined));\n        }\n\n    };\n}\n\nexport function updateTodo(todo) {\n    return {\n        type: UPDATE_TODO,\n        todo\n    }\n}\n\nexport function updateTodoOnServer(todo) {\n    return (dispatch) => {\n        let updatedTodo = todo.toJS();\n        delete updatedTodo.id;\n        delete updatedTodo.deleting;\n\n        updatedTodo.colors = updatedTodo.priority <= 2 ? 'red' : 'green';\n        api('PATCH', '/' + todo.get('id'), updatedTodo, (res) => {\n            res.id = res._id;\n            res.done = todo.get('done');\n            res.deleting = todo.get('deleting');\n            delete res._id;\n\n            dispatch(updateTodo(res));\n        });\n    };\n}\n\nfunction addTodo(newTodo) {\n    return {\n        type: ADD_TODO,\n        newTodo\n    };\n}\n\nexport function addTodoOnServer(item) {\n    return (dispatch) => {\n        let color = item.get('priority') <= 2 ? 'red' : 'green';\n        let newItem = item.set('colors', color);\n        newItem = newItem.set('done', false);\n        api('POST', '', newItem.toJS(), (res) => {\n            res.id = res._id;\n            delete res._id;\n\n            res.done = res.done === \"true\";\n\n            dispatch(addTodo(res));\n        });\n    };\n\n}\n\nfunction deleteTodo(id) {\n    return {\n        type: DEL_TODO,\n        todoID: id\n    };\n}\n\nexport function massAddTodo(todos) {\n    return {\n        type: MASS_ADD_TODO,\n        todos\n    };\n}\n\n\nexport function deleteTodoOnServer(id) {\n    return (dispatch) => {\n        dispatch(changeTodoFlagOnServer(id, true, undefined));\n        api('DELETE', '/' + id, {}, (res) => {\n            dispatch(deleteTodo(id));\n        });\n    };\n}","export const ADD_TODO = 'ADD_TODO';\nexport const MASS_ADD_TODO = 'MASS_ADD_TODO';\nexport const DEL_TODO = 'DEL_TODO';\nexport const CHANGE_FLAG = 'CHANGE_FLAG';\nexport const UPDATE_TODO = 'UPDATE_TODO';","import { connect } from \"react-redux\";\nimport ListItem from \"../components/ListItem\";\nimport { deleteTodoOnServer, changeTodoFlagOnServer } from '../actions/todos';\n\nfunction mapStateToProps(state, props) {\n    return {\n        item: state.todos.get(\"\" + props.id)\n    };\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n    return {\n        onDelete: () => dispatch(deleteTodoOnServer(props.id)),\n        onDone: (e) => dispatch(changeTodoFlagOnServer(props.id, undefined, e))\n    };\n}\n\nconst ListItemContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ListItem);\n\nexport default ListItemContainer;","import React, { Component } from 'react';\nimport ListItemContainer from '../containers/ListItemContainer';\nimport '../App.css';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\n\nclass App extends Component {\n\n  render() {\n    return (\n      < div className=\"App\" >\n        <h1> SUM: {this.props.sum}</h1>\n        First: <br />\n        {this.props.todos.map((e) => {\n          return (<ListItemContainer key={e} id={e} />);\n        })}\n\n\n        <hr />\n        <div>\n          {this.props.todosByName.map((e) => {\n            return (<ListItemContainer key={e} id={e} />);\n          })}\n        </div>\n        <Link to={\"/newtodo\"}>New todo</Link>\n      </div >\n    );\n  };\n};\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport App from \"../components/App\";\n\nfunction mapStateToProps(state, props) {\n    console.log(state.todos);\n    return {\n        todos: state.todos.keySeq(),\n        todosByName: state.todos\n            .toList()\n            .sortBy(e => parseInt(e.get('priority'), 10))\n            .map(e => e.get('id')),\n        sum: state.todos.toList()\n            .map(e => e.get('priority'))\n            .reduce((e, cur) => parseInt(cur, 10) + parseInt(e, 10))\n    };\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n    return {};\n}\n\nconst AppContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n\nexport default AppContainer;","import { reducer as todoReducer } from './todos';\n//import { combineReducers } from 'redux-immutablejs'\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer as formReducer } from 'redux-form/immutable'\nimport thunkMiddleware from 'redux-thunk';\n\nexport const store = createStore(combineReducers({\n    form: formReducer,\n    todos: todoReducer\n}),\n    composeWithDevTools(\n        applyMiddleware(thunkMiddleware)\n    ));","import { fromJS } from 'immutable';\nimport { ADD_TODO, DEL_TODO, CHANGE_FLAG, UPDATE_TODO, MASS_ADD_TODO } from '../actions/index';\n\nexport function reducer(state = fromJS({}), action) {\n    if (action.type === ADD_TODO) {\n        let newTodo = Object.assign({}, action.newTodo, {\n            deleting: false\n        });\n\n        return state.set(\"\" + action.newTodo.id, fromJS(newTodo));\n    }\n\n    if (action.type === UPDATE_TODO) {\n        return state.set(\"\" + action.todo.id, fromJS(action.todo));\n    }\n\n    if (action.type === DEL_TODO) {\n        return state.delete(action.todoID);\n    }\n\n    if (action.type === MASS_ADD_TODO) {\n        let newState = state;\n        action.todos.forEach(todo => {\n\n            let newTodo = Object.assign({}, todo, {\n                deleting: false\n            });\n\n            newState = newState.set(\"\" + todo.id, fromJS(newTodo));\n        });\n\n        return newState;\n    }\n\n    if (action.type === CHANGE_FLAG) {\n        let newState = state;\n\n        if (typeof action.deleting !== 'undefined') {\n            newState = newState.setIn([\"\" + action.id, 'deleting'], action.deleting);\n        }\n\n        if (typeof action.done !== 'undefined') {\n            newState = newState.setIn([\"\" + action.id, 'done'], action.done);\n        }\n\n        return newState;\n    }\n\n\n\n    return state;\n}","import React from 'react';\n\nexport const NewTodoRenderField = ({\n    input,\n    label,\n    type,\n    meta: { touched, error, warning }\n}) => (\n        <div>\n            <label>{label}</label>\n            <div>\n                <input {...input} type={type} placeholder={label} />\n                {touched &&\n                    ((error && <span>{error}</span>) ||\n                        (warning && <span>{warning}</span>))}\n            </div>\n        </div>\n    )\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { reduxForm, Field } from 'redux-form/lib/immutable';\nimport { NewTodoRenderField } from './NewTodoRenderField';\n\n\nlet TodoDetailEditForm = (props) => {\n    const { handleSubmit } = props\n    return <form onSubmit={handleSubmit}>\n        <Field type=\"text\" name=\"value\" placeholder=\"Title\" component={NewTodoRenderField} label=\"Todo Title\" />\n        <Field type=\"text\" name=\"priority\" placeholder=\"Priority\" component={NewTodoRenderField} style={{ width: 10 }} label=\"Priority\" />\n        <button type=\"submit\">Add / Update</button>\n    </form>\n}\n//            onClick={e => props.onAddTodo(\"value\", \"priority\")}\nlet TodoDetailEditFormContainer = reduxForm({\n    form: 'addTodoForm'\n})(TodoDetailEditForm);\n\nfunction TodoDetail({ item, onUpdateTodo }) {\n    if (!item) {\n        return (<Redirect to=\"/\" />)\n    }\n    return (<div>\n        <h1>{item.get('value')}</h1>\n        <p>Done: {item.get('done') ? \"true\" : \"false\"}</p>\n        <p>Priority: {item.get('priority')}</p>\n        <TodoDetailEditFormContainer enableReinitizalize={true} keepDirtyOnReinitizalize={true} initialValues={item} onSubmit={onUpdateTodo} />\n        <Link to=\"/\">Back</Link>\n    </div>)\n}\n\nexport default TodoDetail;","import { connect } from \"react-redux\";\nimport TodoDetail from \"../components/TodoDetail\";\nimport { updateTodoOnServer } from \"../actions/todos\";\n\nfunction mapStateToProps(state, props) {\n    return {\n        item: state.todos.get(\"\" + props.match.params.id)\n    };\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n    return {\n        onUpdateTodo: (item) => dispatch(updateTodoOnServer(item))\n    };\n}\n\nconst TodoDeailContaier = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoDetail);\n\nexport default TodoDeailContaier;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { reduxForm, Field } from 'redux-form/immutable';\nimport { NewTodoRenderField } from './NewTodoRenderField';\n\nlet NewTodoForm = (props) => {\n    const { handleSubmit } = props\n    return <form onSubmit={handleSubmit}>\n        <Field type=\"text\" name=\"value\" placeholder=\"Title\" component={NewTodoRenderField} label=\"Todo Title\" />\n        <Field type=\"text\" name=\"priority\" placeholder=\"Priority\" component={NewTodoRenderField} style={{ width: 10 }} label=\"Priority\" />\n        <button type=\"submit\">Add</button>\n    </form>\n}\n//            onClick={e => props.onAddTodo(\"value\", \"priority\")}\nlet NewTodoFormContainer = reduxForm({\n    form: 'addTodoForm'\n})(NewTodoForm);\n\n\nfunction NewTodo({ onAddTodo }) {\n    return (<form>\n        <NewTodoFormContainer onSubmit={onAddTodo}></NewTodoFormContainer>\n        <Link to=\"/\">Back</Link>\n    </form>\n    )\n}\n\nexport default NewTodo;","import { connect } from \"react-redux\";\nimport NewTodo from \"../components/NewTodo\";\nimport { addTodoOnServer } from \"../actions/todos\";\n\nfunction mapStateToProps(state, props) {\n    return {};\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n    return {\n        onAddTodo: (item) => dispatch(addTodoOnServer(item)),\n    };\n}\n\nconst NewTodoContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(NewTodo);\n\nexport default NewTodoContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './containers/AppContainer';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport { store } from './reducers/index';\nimport { Provider } from 'react-redux';\nimport TodoDetailContainer from './containers/TodoDetailContainer';\nimport NewTodoContainer from './containers/NewTodoContainer';\n\nimport api from './api';\nimport { massAddTodo } from './actions/todos';\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <Router>\n            <Route exact path=\"/\" component={AppContainer} />\n            <Route path=\"/todo/:id\" component={TodoDetailContainer} />\n            <Route path=\"/newtodo\" component={NewTodoContainer} />\n        </Router>\n    </Provider>,\n    document.getElementById('root'));\n\n\napi('GET', '', {}, (res) => {\n    store.dispatch(massAddTodo(res.map(e => {\n        e.id = e._id;\n        delete e._id;\n        e.done = e.done === 'true';\n        return e;\n    })));\n});"],"sourceRoot":""}